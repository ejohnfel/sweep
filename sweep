#!/bin/bash

DEBUG=0
PING=1
TRACERT=0
FINGERPRINT=0
port=""
prefix=129.49.31
start=0
stop=255

function DebugMsg()
{
	[ ${DEBUG} -gt 0 ] && Msg "$(date) : ${*}"
}

function Msg()
{
	echo -e "${*}"
}

function Usage()
{
	echo -e "sweep\n\nSweep DNS for a subnet"
	echo -e "========================="
	echo -e "-h\t\tThis menu"
	echo -e "-s [prefix]\tSubnet prefix (i.e. 129.49.31)"
	echo -e "-b [begin]\tNode to begin on (i.e. 3)"
	echo -e "-e [end]\tNode to end on (i.e. 240)"
	echo -e "-n\t\tNo ping check"
	echo -e "-t\t\tDo trace route instead of ping"
	echo -e "-f\t\tFingerprint live hosts (requires nmap be installed, with a smattering of TCP/22,443,80,445,9100, etc)"
	echo -e "-p [port]\tExecute TCP Port ping (requires nmap/nping be installed)"
	echo -e "\n\nEx: sweep -p 129.49.31 -b 16 -e 200\n\nWill sweep through 129.49.31.16 to 129.49.31.200"
}

#
# Main Loop
#

# Trap ctrl-c to be sure script does not go off the reservation and keep going after you press ctrl-c
trap "echo -e\"\nStopping early\"; exit 0" sigint

while getopts "hdb:e:p:" opt; do
	case ${opt} in
	"h") Usage; exit 0 ;;
	"d") DEBUG=1 ;;
	"b") start="${OPTARG}" ;;
	"e") stop="${OPTARG}" ;;
	"s") prefix="${OPTARG}" ;;
	"p") port="${OPTARG}" ;;
	"n") PING=0 ;;
	"t") TRACERT=1; PING=0; ;;
	"f") FINGERPRINT=1 ;;
	esac
done

for ((node=${start}; node < ${stop}; ++node)); do
	output=$(nslookup ${prefix}.${node} | grep "name = ")

	if [[ ${output} =~ name\ =\  ]]; then
		if [ ${PING} -gt 0 ]; then
			if [ "${port}" = "" ]; then
				# Ok Regular PING
				echo -n "${output} (aka ${prefix}.${node}) is "
				if ping -q -c 1 -w 1 ${prefix}.${node} > /dev/null; then
					echo "alive"
				else
					echo "not responding"
				fi
			else
				# Port PING
				nping --tcp -p ${port} ${prefix}.${node}
			fi
		elif [ ${TRACERT} -gt 0 ]; then
				# Trace route
				traceroute ${prefix}.${node}
		fi
	else
		echo -e "BUMMER : ${prefix}.${node} appears to have no reverse DNS registration"
	fi
	if [ ${FINGERPRINT} -gt 0 ]; then
		nmap --open -A -O -Pn -p T:22,80,443,445,3389,9100 ${prefix}.${node}
	fi
done
